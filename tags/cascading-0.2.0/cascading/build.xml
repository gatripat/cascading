<?xml version="1.0"?>
<!--
  $Id: //depot/calku/cascading/build.xml#8 $
  $Change: 1363 $
  $DateTime: 2008/01/21 17:01:01 $
  $Author: cwensel $
-->
<project name="cascading" default="build" basedir=".">

  <dirname property="cascading.basedir" file="${ant.file.cascading}"/>

  <property file="${user.home}/build.properties"/>
  <property file="${cascading.basedir}/version.properties"/>

  <property name="release.version" value="x.y.z"/>

  <property name="src" location="${cascading.basedir}/src"/>
  <property name="src.java" location="${src}/java"/>
  <property name="src.test" location="${src}/test"/>
  <property name="src.examples" location="${src}/examples"/>

  <property name="build" location="${cascading.basedir}/build/"/>
  <property name="build.classes" location="${build}"/>
  <property name="build.java" location="${build.classes}/java"/>
  <property name="build.test" location="${build.classes}/test"/>
  <property name="build.examples" location="${build.classes}/examples"/>

  <property name="test.data" location="${build}/testresults"/>
  <property name="test.showoutput" value="yes"/>

  <property name="lib" location="${cascading.basedir}/lib"/>
  <property name="lib.build" location="${lib}/build"/>
  <property name="dist" location="${cascading.basedir}/dist"/>
  <property name="javadoc" location="${cascading.basedir}/javadoc"/>
  <property name="log" location="${cascading.basedir}/log"/>

  <property name="hadoop.home" location="${cascading.basedir}/../hadoop"/>

  <property name="jar.cascading" value="cascading-${release.version}.jar"/>
  <property name="jar.cascading-lib" value="cascading-lib-${release.version}.jar"/>
  <property name="jar.cascading-examples" value="cascading-examples-${release.version}.jar"/>

  <property name="tar.cascading" value="cascading-${release.version}.tgz"/>

  <path id="project.class.path">
    <pathelement location="${build.java}"/>
    <pathelement location="${build.examples}"/>
    <pathelement location="${build.test}"/>
    <fileset dir="${lib}">
      <include name="*.jar"/>
    </fileset>

    <fileset dir="${lib.build}">
      <include name="*.jar"/>
    </fileset>

    <fileset dir="${hadoop.home}">
      <include name="hadoop-*-core.jar"/>
      <include name="hadoop-*-test.jar"/>
    </fileset>

    <fileset dir="${hadoop.home}/lib">
      <include name="*.jar"/>
      <exclude name="**/junit*"/>
    </fileset>

    <fileset dir="${hadoop.home}/lib/jetty-ext">
      <include name="*.jar"/>
    </fileset>
  </path>

  <path id="project.src.path">
    <pathelement location="${src.java}"/>
    <pathelement location="${src.examples}"/>
    <pathelement location="${src.test}"/>
  </path>

  <path id="javadoc.src.path">
    <pathelement location="${src.java}"/>
    <pathelement location="${src.examples}"/>
  </path>

  <!-- sets up environment -->
  <target name="init">
    <echo message="initializing cascading environment..."/>

    <mkdir dir="${build.java}"/>
    <mkdir dir="${build.examples}"/>
    <mkdir dir="${build.test}"/>
    <mkdir dir="${test.data}"/>

    <property name="CLASSPATH" refid="project.class.path"/>
    <echo message="${CLASSPATH}"/>
  </target>

  <!-- builds jstress -->
  <target name="build" depends="init">
    <echo message="building cascade..."/>

    <javac srcdir="${src.java}" destdir="${build.java}" verbose="off">
      <classpath refid="project.class.path"/>
    </javac>

    <copy todir="${build.java}">
      <fileset dir="${src.java}">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>

    <javac srcdir="${src.examples}" destdir="${build.examples}" verbose="off">
      <classpath refid="project.class.path"/>
    </javac>

    <copy todir="${build.examples}">
      <fileset dir="${src.examples}">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>

    <javac srcdir="${src.test}" destdir="${build.test}" verbose="off">
      <classpath refid="project.class.path"/>
    </javac>

    <copy todir="${build.test}">
      <fileset dir="${src.test}">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
  </target>

  <!-- creates jstress javadoc -->
  <target name="javadoc" depends="init">
    <echo message="creating cascading javadoc..."/>
    <delete dir="${javadoc}"/>
    <mkdir dir="${javadoc}"/>

    <javadoc sourcepathref="javadoc.src.path"
             destdir="${javadoc}"
             packagenames="cascading.*"
             windowtitle="Cascading">
      <link href="http://java.sun.com/j2se/1.5.0/docs/api"/>
      <link href="http://www.janino.net/javadoc/"/>
      <bottom><![CDATA[<i>Copyright &#169; 2007-2008 Vinculum Technologies, Inc. All Rights Reserved.</i>]]></bottom>
    </javadoc>

  </target>

  <!-- runs JUnit tests -->
  <target name="test" depends="init, build">
    <echo message="running all cascading tests..."/>

    <junit printsummary="true" showoutput="${test.showoutput}" fork="yes" haltonerror="no" haltonfailure="no" dir="."
           maxmemory="512m">

      <sysproperty key="test.build.data" value="data"/>
      <sysproperty key="hadoop.log.dir" value="build/test/log"/>

      <classpath>
        <path refid="project.class.path"/>
        <pathelement path="${java.class.path}"/>
      </classpath>
      <formatter type="plain" usefile="true"/>

      <test name="${testcase}" todir="${test.data}" if="testcase"/>
      <batchtest todir="${test.data}" haltonfailure="true" unless="testcase">
        <fileset dir="${src.test}">
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>

  </target>

  <!-- cleans up build artifacts -->
  <target name="clean">
    <echo message="cleaning cascading..."/>
    <delete dir="${build}"/>
    <delete dir="${javadoc}"/>
  </target>

  <!-- removes build -->
  <target name="nuke">
    <echo message="nuking cascade..."/>
    <delete dir="${build}"/>
    <delete dir="${javadoc}"/>
    <delete dir="${dist}"/>
    <delete dir="${log}"/>

    <delete>
      <fileset dir="." includes="${ant.project.name}*.tgz"/>
      <fileset dir="." includes="TEST-*"/>
      <fileset dir="." includes="junit*.properties"/>
      <fileset dir="." includes="**/.DS_Store"/>
    </delete>

  </target>

  <!-- jar build -->
  <target name="jar" depends="build">

    <echo message="jarring cascading..."/>
    <delete file="${build}/${jar.cascading}"/>
    <delete file="${build}/${jar.cascading-lib}"/>
    <delete file="${build}/${jar.cascading-examples}"/>
    <delete dir="${build.java}/lib"/>

    <manifest file="${build}/MANIFEST.MF">
      <attribute name="Built-By" value="${user.name}"/>
      <!--<attribute name="Main-Class" value="cascade.Main"/>-->
    </manifest>

    <jar jarfile="${build}/${jar.cascading-lib}" manifest="${build}/MANIFEST.MF" compress="yes">
      <fileset dir="${build.java}"/>
    </jar>

    <jar jarfile="${build}/${jar.cascading-examples}" manifest="${build}/MANIFEST.MF" compress="yes">
      <fileset dir="${build.examples}"/>
    </jar>

    <!-- hadoop supports jars in a lib directory -->
    <mkdir dir="${build.java}/lib"/>

    <copy todir="${build.java}/lib">
      <fileset dir="./lib">
        <include name="*.jar"/>
      </fileset>
    </copy>

    <delete dir="${build.java}/META-INF"/>

    <jar jarfile="${build}/${jar.cascading}" manifest="${build}/MANIFEST.MF" compress="yes">
      <fileset dir="${build.java}"/>
    </jar>

  </target>

  <target name="dist" depends="jar,javadoc">
    <mkdir dir="${dist}"/>

    <copy todir="${dist}">

      <fileset dir=".">
        <exclude name="build.properties"/>

        <exclude name="build/**"/>
        <exclude name="dist/**"/>
        <exclude name="www/**"/>
        <exclude name="log/**"/>

        <exclude name="**/CVS/**"/>
        <exclude name="**/*.tgz"/>
        <exclude name="TEST-*"/>
        <exclude name="**/.DS_Store"/>
      </fileset>

    </copy>

    <copy file="${build}/${jar.cascading}" todir="${dist}"/>
    <copy file="${build}/${jar.cascading-lib}" todir="${dist}"/>
    <copy file="${build}/${jar.cascading-examples}" todir="${dist}"/>

  </target>

  <target name="tar" depends="dist">
    <tar destfile="${tar.cascading}"
         compression="gzip">
      <tarfileset dir="dist/" prefix="cascading">
        <include name="**/**"/>
      </tarfileset>
    </tar>
  </target>


</project>
